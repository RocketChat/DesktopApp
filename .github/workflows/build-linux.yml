name: Build for Linux

on:
  - push
  - pull_request

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2-beta
        with:
          node-version: '12'
      - run: yarn --check-files
      - run: yarn build
        env:
          NODE_ENV: production
          BUGSNAG_API_KEY: ${{ secrets.BUGSNAG_API_KEY }}
      - run: yarn test
      - run: yarn electron-builder --dir
      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: ./dist

  check:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2-beta
        with:
          node-version: '12'
      - run: yarn --check-files
      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: ./dist
      - run: |
          xvfb-run ./dist/linux-unpacked/rocketchat-desktop 2>&1 1>output.log &
          sleep 30
          kill %1
          cat output.log

  deploy:
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2-beta
        with:
          node-version: '12'
      - run: yarn --check-files
      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: ./dist
      - run: yarn electron-builder --prepackaged ./dist/linux-unpacked --linux 'tar.gz' 'deb' 'rpm'
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
      - uses: samuelmeuli/action-snapcraft@v1
        with:
          snapcraft_token: ${{ secrets.SNAP_TOKEN }}
      - if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: yarn electron-builder --prepackaged ./dist/linux-unpacked --publish always --linux snap -c.publish.1.provider=snapStore -c.publish.1.channel=stable
      - if: ${{ github.ref == 'refs/heads/master' }}
        run: yarn electron-builder --prepackaged ./dist/linux-unpacked --publish always --linux snap -c.publish.1.provider=snapStore -c.publish.1.channel=candidate
      - if: ${{ startsWith(github.ref, 'refs/heads/release/') || startsWith(github.ref, 'refs/heads/hotfix/') }}
        run: yarn electron-builder --prepackaged ./dist/linux-unpacked --publish always --linux snap -c.publish.1.provider=snapStore -c.publish.1.channel=beta
      - if: ${{ startsWith(github.ref, 'refs/heads/') }}
        run: yarn electron-builder --prepackaged ./dist/linux-unpacked --publish always --linux snap -c.publish.1.provider=snapStore -c.publish.1.channel=edge
      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: ./dist
